# Perfil alinhado ao seu Gatling (~340 req/s, payloads pequenos)
# Foco: baixa memória + um pouco de reuso upstream para não penalizar handshake.
# Round-robin é o padrão (não declarar least_conn/ip_hash/hash).
worker_processes 1;

events {
    worker_connections 4096;
    # Sem 'use epoll' para máxima compatibilidade
}

http {
    access_log off;
    error_log /dev/null emerg;   # zero logs

    gzip off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Cliente <-> Nginx: keep-alive curto para não reter sockets
    keepalive_timeout 4s;
    keepalive_requests 200;
    reset_timedout_connection on;

    # Buffers pequenos para cabeçalhos/corpo (payloads minúsculos)
    client_max_body_size 32k;
    client_body_buffer_size 8k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 4k;

    # Upstream (round-robin por padrão)
    upstream api {
        server app1:3001;
        server app2:3002;
        keepalive 16;  # pequeno pool de conexões para reduzir handshakes sem inflar RAM
    }

    server {
        listen 9999;

        location / {
            proxy_http_version 1.1;
            proxy_set_header Connection "";  # permite reuso upstream (combina com keepalive 16)
            proxy_set_header Host $host;

            # Sem buffers/arquivos temporários: economiza RAM/IO
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;

            # Timeouts < Node (Node mantém requestTimeout=0; keepAlive/headers > estes)
            proxy_connect_timeout  3s;
            proxy_send_timeout     8s;
            proxy_read_timeout     9s;

            proxy_pass http://api;
        }
    }
}
